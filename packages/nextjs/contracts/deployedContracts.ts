/**
 * This file is autogenerated by Scaffold-ETH.
 * You should not edit it manually or your changes might be overwritten.
 */
import { GenericContractsDeclaration } from "~~/utils/scaffold-eth/contract";

const deployedContracts = {
  690: {
    Game: {
      address: "0xa3470Bd15125EECe29E96D7c131869779aE90169",
      abi: [
        {
          inputs: [
            {
              internalType: "address",
              name: "_biomeWorldAddress",
              type: "address",
            },
            {
              components: [
                {
                  components: [
                    {
                      internalType: "int16",
                      name: "x",
                      type: "int16",
                    },
                    {
                      internalType: "int16",
                      name: "y",
                      type: "int16",
                    },
                    {
                      internalType: "int16",
                      name: "z",
                      type: "int16",
                    },
                  ],
                  internalType: "struct VoxelCoord",
                  name: "lowerSouthwestCorner",
                  type: "tuple",
                },
                {
                  components: [
                    {
                      internalType: "int16",
                      name: "x",
                      type: "int16",
                    },
                    {
                      internalType: "int16",
                      name: "y",
                      type: "int16",
                    },
                    {
                      internalType: "int16",
                      name: "z",
                      type: "int16",
                    },
                  ],
                  internalType: "struct VoxelCoord",
                  name: "size",
                  type: "tuple",
                },
              ],
              internalType: "struct Area",
              name: "initialArea",
              type: "tuple",
            },
          ],
          stateMutability: "payable",
          type: "constructor",
        },
        {
          inputs: [],
          name: "biomeWorldAddress",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "getMatchArea",
          outputs: [
            {
              components: [
                {
                  components: [
                    {
                      internalType: "int16",
                      name: "x",
                      type: "int16",
                    },
                    {
                      internalType: "int16",
                      name: "y",
                      type: "int16",
                    },
                    {
                      internalType: "int16",
                      name: "z",
                      type: "int16",
                    },
                  ],
                  internalType: "struct VoxelCoord",
                  name: "lowerSouthwestCorner",
                  type: "tuple",
                },
                {
                  components: [
                    {
                      internalType: "int16",
                      name: "x",
                      type: "int16",
                    },
                    {
                      internalType: "int16",
                      name: "y",
                      type: "int16",
                    },
                    {
                      internalType: "int16",
                      name: "z",
                      type: "int16",
                    },
                  ],
                  internalType: "struct VoxelCoord",
                  name: "size",
                  type: "tuple",
                },
              ],
              internalType: "struct Area",
              name: "",
              type: "tuple",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "getWinner",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "isGameOver",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "msgSender",
              type: "address",
            },
            {
              internalType: "ResourceId",
              name: "systemId",
              type: "bytes32",
            },
            {
              internalType: "bytes",
              name: "callData",
              type: "bytes",
            },
          ],
          name: "onAfterCallSystem",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "msgSender",
              type: "address",
            },
            {
              internalType: "ResourceId",
              name: "systemId",
              type: "bytes32",
            },
            {
              internalType: "bytes",
              name: "callData",
              type: "bytes",
            },
          ],
          name: "onBeforeCallSystem",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "msgSender",
              type: "address",
            },
            {
              internalType: "ResourceId",
              name: "systemId",
              type: "bytes32",
            },
            {
              internalType: "uint8",
              name: "enabledHooksBitmap",
              type: "uint8",
            },
            {
              internalType: "bytes32",
              name: "callDataHash",
              type: "bytes32",
            },
          ],
          name: "onRegisterHook",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "msgSender",
              type: "address",
            },
            {
              internalType: "ResourceId",
              name: "systemId",
              type: "bytes32",
            },
            {
              internalType: "uint8",
              name: "enabledHooksBitmap",
              type: "uint8",
            },
            {
              internalType: "bytes32",
              name: "callDataHash",
              type: "bytes32",
            },
          ],
          name: "onUnregisterHook",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "bytes4",
              name: "interfaceId",
              type: "bytes4",
            },
          ],
          name: "supportsInterface",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "winner",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
      ],
      inheritedFunctions: {
        onAfterCallSystem: "@latticexyz/world/src/IOptionalSystemHook.sol",
        onBeforeCallSystem: "@latticexyz/world/src/IOptionalSystemHook.sol",
        onRegisterHook: "@latticexyz/world/src/IOptionalSystemHook.sol",
        onUnregisterHook: "@latticexyz/world/src/IOptionalSystemHook.sol",
        supportsInterface: "@latticexyz/world/src/IOptionalSystemHook.sol",
      },
    },
  },
  17069: {
    Game: {
      address: "0xae60eCEFf66A56771965817456190AF11D89357f",
      abi: [
        {
          inputs: [
            {
              internalType: "address",
              name: "_biomeWorldAddress",
              type: "address",
            },
          ],
          stateMutability: "nonpayable",
          type: "constructor",
        },
        {
          inputs: [
            {
              internalType: "bytes",
              name: "data",
              type: "bytes",
            },
            {
              internalType: "uint256",
              name: "start",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "end",
              type: "uint256",
            },
          ],
          name: "Slice_OutOfBounds",
          type: "error",
        },
        {
          inputs: [],
          name: "biomeWorldAddress",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "buildCount",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "buildingId",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "n",
              type: "uint256",
            },
          ],
          name: "challengeBuilding",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "bytes32",
              name: "",
              type: "bytes32",
            },
          ],
          name: "coordHashToBuilder",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint8[]",
              name: "objectTypeIds",
              type: "uint8[]",
            },
            {
              components: [
                {
                  internalType: "int16",
                  name: "x",
                  type: "int16",
                },
                {
                  internalType: "int16",
                  name: "y",
                  type: "int16",
                },
                {
                  internalType: "int16",
                  name: "z",
                  type: "int16",
                },
              ],
              internalType: "struct VoxelCoord[]",
              name: "relativePositions",
              type: "tuple[]",
            },
            {
              internalType: "uint256",
              name: "submissionPrice",
              type: "uint256",
            },
            {
              internalType: "string",
              name: "name",
              type: "string",
            },
          ],
          name: "create",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [],
          name: "getAllBlueprints",
          outputs: [
            {
              components: [
                {
                  internalType: "uint256",
                  name: "id",
                  type: "uint256",
                },
                {
                  components: [
                    {
                      internalType: "uint8[]",
                      name: "objectTypeIds",
                      type: "uint8[]",
                    },
                    {
                      components: [
                        {
                          internalType: "int16",
                          name: "x",
                          type: "int16",
                        },
                        {
                          internalType: "int16",
                          name: "y",
                          type: "int16",
                        },
                        {
                          internalType: "int16",
                          name: "z",
                          type: "int16",
                        },
                      ],
                      internalType: "struct VoxelCoord[]",
                      name: "relativePositions",
                      type: "tuple[]",
                    },
                  ],
                  internalType: "struct Build",
                  name: "blueprint",
                  type: "tuple",
                },
              ],
              internalType: "struct BlueprintPair[]",
              name: "",
              type: "tuple[]",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "getAllBuilders",
          outputs: [
            {
              components: [
                {
                  internalType: "uint256",
                  name: "id",
                  type: "uint256",
                },
                {
                  internalType: "address[]",
                  name: "builderAddresses",
                  type: "address[]",
                },
              ],
              internalType: "struct BuilderList[]",
              name: "",
              type: "tuple[]",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "getAllLocations",
          outputs: [
            {
              components: [
                {
                  internalType: "uint256",
                  name: "id",
                  type: "uint256",
                },
                {
                  components: [
                    {
                      internalType: "int16",
                      name: "x",
                      type: "int16",
                    },
                    {
                      internalType: "int16",
                      name: "y",
                      type: "int16",
                    },
                    {
                      internalType: "int16",
                      name: "z",
                      type: "int16",
                    },
                  ],
                  internalType: "struct VoxelCoord[]",
                  name: "location",
                  type: "tuple[]",
                },
              ],
              internalType: "struct LocationPair[]",
              name: "",
              type: "tuple[]",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "getAllNames",
          outputs: [
            {
              components: [
                {
                  internalType: "uint256",
                  name: "id",
                  type: "uint256",
                },
                {
                  internalType: "string",
                  name: "name",
                  type: "string",
                },
              ],
              internalType: "struct NamePair[]",
              name: "",
              type: "tuple[]",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "getAllSubmissionPrices",
          outputs: [
            {
              components: [
                {
                  internalType: "uint256",
                  name: "id",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "price",
                  type: "uint256",
                },
              ],
              internalType: "struct SubmissionPricePair[]",
              name: "",
              type: "tuple[]",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "getEarned",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "getList",
          outputs: [
            {
              components: [
                {
                  internalType: "uint256",
                  name: "id",
                  type: "uint256",
                },
                {
                  internalType: "string",
                  name: "name",
                  type: "string",
                },
                {
                  internalType: "uint256",
                  name: "price",
                  type: "uint256",
                },
                {
                  internalType: "address[]",
                  name: "builders",
                  type: "address[]",
                },
                {
                  components: [
                    {
                      internalType: "uint8[]",
                      name: "objectTypeIds",
                      type: "uint8[]",
                    },
                    {
                      components: [
                        {
                          internalType: "int16",
                          name: "x",
                          type: "int16",
                        },
                        {
                          internalType: "int16",
                          name: "y",
                          type: "int16",
                        },
                        {
                          internalType: "int16",
                          name: "z",
                          type: "int16",
                        },
                      ],
                      internalType: "struct VoxelCoord[]",
                      name: "relativePositions",
                      type: "tuple[]",
                    },
                  ],
                  internalType: "struct Build",
                  name: "blueprint",
                  type: "tuple",
                },
                {
                  components: [
                    {
                      internalType: "int16",
                      name: "x",
                      type: "int16",
                    },
                    {
                      internalType: "int16",
                      name: "y",
                      type: "int16",
                    },
                    {
                      internalType: "int16",
                      name: "z",
                      type: "int16",
                    },
                  ],
                  internalType: "struct VoxelCoord[]",
                  name: "locations",
                  type: "tuple[]",
                },
              ],
              internalType: "struct ListEntry[]",
              name: "",
              type: "tuple[]",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "msgSender",
              type: "address",
            },
            {
              internalType: "ResourceId",
              name: "systemId",
              type: "bytes32",
            },
            {
              internalType: "bytes",
              name: "callData",
              type: "bytes",
            },
          ],
          name: "onAfterCallSystem",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "msgSender",
              type: "address",
            },
            {
              internalType: "ResourceId",
              name: "systemId",
              type: "bytes32",
            },
            {
              internalType: "bytes",
              name: "callData",
              type: "bytes",
            },
          ],
          name: "onBeforeCallSystem",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "msgSender",
              type: "address",
            },
            {
              internalType: "ResourceId",
              name: "systemId",
              type: "bytes32",
            },
            {
              internalType: "uint8",
              name: "enabledHooksBitmap",
              type: "uint8",
            },
            {
              internalType: "bytes32",
              name: "callDataHash",
              type: "bytes32",
            },
          ],
          name: "onRegisterHook",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "msgSender",
              type: "address",
            },
            {
              internalType: "ResourceId",
              name: "systemId",
              type: "bytes32",
            },
            {
              internalType: "uint8",
              name: "enabledHooksBitmap",
              type: "uint8",
            },
            {
              internalType: "bytes32",
              name: "callDataHash",
              type: "bytes32",
            },
          ],
          name: "onUnregisterHook",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "buildingId",
              type: "uint256",
            },
            {
              components: [
                {
                  internalType: "int16",
                  name: "x",
                  type: "int16",
                },
                {
                  internalType: "int16",
                  name: "y",
                  type: "int16",
                },
                {
                  internalType: "int16",
                  name: "z",
                  type: "int16",
                },
              ],
              internalType: "struct VoxelCoord",
              name: "baseWorldCoord",
              type: "tuple",
            },
          ],
          name: "submitBuilding",
          outputs: [],
          stateMutability: "payable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "bytes4",
              name: "interfaceId",
              type: "bytes4",
            },
          ],
          name: "supportsInterface",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
      ],
      inheritedFunctions: {
        onAfterCallSystem: "@latticexyz/world/src/IOptionalSystemHook.sol",
        onBeforeCallSystem: "@latticexyz/world/src/IOptionalSystemHook.sol",
        onRegisterHook: "@latticexyz/world/src/IOptionalSystemHook.sol",
        onUnregisterHook: "@latticexyz/world/src/IOptionalSystemHook.sol",
        supportsInterface: "@latticexyz/world/src/IOptionalSystemHook.sol",
      },
    },
  },
} as const;

export default deployedContracts satisfies GenericContractsDeclaration;
