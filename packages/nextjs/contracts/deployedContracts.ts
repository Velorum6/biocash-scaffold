/**
 * This file is autogenerated by Scaffold-ETH.
 * You should not edit it manually or your changes might be overwritten.
 */
import { GenericContractsDeclaration } from "~~/utils/scaffold-eth/contract";

const deployedContracts = {
  17069: {
    Game: {
      address: "0x15FEc88173fd6b7f44F89fEB9A174e8d1B53C29f",
      abi: [
        {
          inputs: [
            {
              internalType: "address",
              name: "_biomeWorldAddress",
              type: "address",
            },
            {
              components: [
                {
                  components: [
                    {
                      internalType: "int16",
                      name: "x",
                      type: "int16",
                    },
                    {
                      internalType: "int16",
                      name: "y",
                      type: "int16",
                    },
                    {
                      internalType: "int16",
                      name: "z",
                      type: "int16",
                    },
                  ],
                  internalType: "struct VoxelCoord",
                  name: "lowerSouthwestCorner",
                  type: "tuple",
                },
                {
                  components: [
                    {
                      internalType: "int16",
                      name: "x",
                      type: "int16",
                    },
                    {
                      internalType: "int16",
                      name: "y",
                      type: "int16",
                    },
                    {
                      internalType: "int16",
                      name: "z",
                      type: "int16",
                    },
                  ],
                  internalType: "struct VoxelCoord",
                  name: "size",
                  type: "tuple",
                },
              ],
              internalType: "struct Area",
              name: "initialArea",
              type: "tuple",
            },
          ],
          stateMutability: "payable",
          type: "constructor",
        },
        {
          inputs: [],
          name: "biomeWorldAddress",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "getMatchArea",
          outputs: [
            {
              components: [
                {
                  components: [
                    {
                      internalType: "int16",
                      name: "x",
                      type: "int16",
                    },
                    {
                      internalType: "int16",
                      name: "y",
                      type: "int16",
                    },
                    {
                      internalType: "int16",
                      name: "z",
                      type: "int16",
                    },
                  ],
                  internalType: "struct VoxelCoord",
                  name: "lowerSouthwestCorner",
                  type: "tuple",
                },
                {
                  components: [
                    {
                      internalType: "int16",
                      name: "x",
                      type: "int16",
                    },
                    {
                      internalType: "int16",
                      name: "y",
                      type: "int16",
                    },
                    {
                      internalType: "int16",
                      name: "z",
                      type: "int16",
                    },
                  ],
                  internalType: "struct VoxelCoord",
                  name: "size",
                  type: "tuple",
                },
              ],
              internalType: "struct Area",
              name: "",
              type: "tuple",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "getWinner",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "isGameOver",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "msgSender",
              type: "address",
            },
            {
              internalType: "ResourceId",
              name: "systemId",
              type: "bytes32",
            },
            {
              internalType: "bytes",
              name: "callData",
              type: "bytes",
            },
          ],
          name: "onAfterCallSystem",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "msgSender",
              type: "address",
            },
            {
              internalType: "ResourceId",
              name: "systemId",
              type: "bytes32",
            },
            {
              internalType: "bytes",
              name: "callData",
              type: "bytes",
            },
          ],
          name: "onBeforeCallSystem",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "msgSender",
              type: "address",
            },
            {
              internalType: "ResourceId",
              name: "systemId",
              type: "bytes32",
            },
            {
              internalType: "uint8",
              name: "enabledHooksBitmap",
              type: "uint8",
            },
            {
              internalType: "bytes32",
              name: "callDataHash",
              type: "bytes32",
            },
          ],
          name: "onRegisterHook",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "msgSender",
              type: "address",
            },
            {
              internalType: "ResourceId",
              name: "systemId",
              type: "bytes32",
            },
            {
              internalType: "uint8",
              name: "enabledHooksBitmap",
              type: "uint8",
            },
            {
              internalType: "bytes32",
              name: "callDataHash",
              type: "bytes32",
            },
          ],
          name: "onUnregisterHook",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "bytes4",
              name: "interfaceId",
              type: "bytes4",
            },
          ],
          name: "supportsInterface",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "winner",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
      ],
      inheritedFunctions: {
        onAfterCallSystem: "@latticexyz/world/src/IOptionalSystemHook.sol",
        onBeforeCallSystem: "@latticexyz/world/src/IOptionalSystemHook.sol",
        onRegisterHook: "@latticexyz/world/src/IOptionalSystemHook.sol",
        onUnregisterHook: "@latticexyz/world/src/IOptionalSystemHook.sol",
        supportsInterface: "@latticexyz/world/src/IOptionalSystemHook.sol",
      },
    },
  },
} as const;

export default deployedContracts satisfies GenericContractsDeclaration;
